@model X.PagedList.PagedList<LojaVirtual.Models.Produto>
@{
    ViewData["Title"] = "Index";
    var pesquisa = Context.Request.Query["pesquisa"];
}

<h1>Produto</h1>

<a asp-action="Cadastrar" class="btn btn-primary">Cadastrar</a>
<br />
<br />
<!-- formulario -->

<form method="get">
    <!-----Query string: Colaborador/Cliente/index?pesquisa={palavradigitada}&pagina=3-->
    <div class="form-group">
        <label for="Pesquisa"></label>
        <input type="text" name="pesquisa" id="pesquisa" value="@pesquisa" class="form-control" placeholder="Digite o nome do produto">
    </div>

    <button type="submit" class="btn btn-primary">Pesquisar</button>
</form>
<br />
<br />



@if (TempData["MSG_S"] != null)
{
    <p class="alert alert-info">@Html.Raw(TempData["MSG_S"])</p>
}

@if (Model.Count > 0)
{

    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">@Html.DisplayNameFor(model => model.FirstOrDefault().Id)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.FirstOrDefault().Nome)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.FirstOrDefault().Categoria)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.FirstOrDefault().Valor)</th>
                    <th scope="col">Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Produto produto in Model)
                {
                <tr>
                    <th scope="row">@produto.Id</th>
                    <td>@produto.Nome</td>
                    <td>@produto.CategoriaId</td>
                    <td>@produto.Valor</td>
                    <td>
                        <a asp-action="Atualizar" asp-route-id="@produto.Id" class="btn btn-secondary btn-sm">Atualizar</a>
                        <a asp-action="Excluir" asp-route-id="@produto.Id" class="btn btn-danger btn-sm">Excluir</a>
                    </td>
                </tr>
                }
           
            </tbody>
        </table>
    </div>

    <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
    @Html.PagedListPager((IPagedList)Model, pagina => Url.Action("Index", new { pagina = pagina, pesquisa = pesquisa }))

}
else
{
    <span>Nenhum registro cadastrado!</span>
}


